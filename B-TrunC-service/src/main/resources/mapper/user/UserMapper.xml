<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dhxx.service.mapper.user.UserMapper">

    <resultMap id="userMap" type="com.dhxx.common.entity.user.User">
        <id column="id" property="id" />
        <result column="account" property="account" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="user_name" property="userName" />
        <result column="udn" property="udn" />
        <result column="role_id" property="roleId" />
        <result column="status" property="status" />
        <result column="register_date" property="registerDate" />
    </resultMap>

    <select id="infoByAccout" resultMap="userMap">
        select u.id,
        u.account account,
        u.password password,
        u.salt salt,
        u.user_name userName,
        u.udn udn,
        u.role_id roleId,
        u.status status,
        u.register_date registerDate
        from TB_USER u
        where 1 = 1
        <if test="account != null and account != ''">
            and u.account = #{account}
        </if>
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.dhxx.common.entity.user.User">
		insert into TB_USER(
				account,
				password,
				salt,
				user_name,
				udn,
				role_id,
				status, 
				register_date)
		values(
				#{account,jdbcType=VARCHAR},
				#{password,jdbcType=VARCHAR},
				#{salt,jdbcType=VARCHAR},
				#{userName,jdbcType=VARCHAR},
				#{udn,jdbcType=VARCHAR},
				#{roleId,jdbcType=VARCHAR},
				#{status,jdbcType=VARCHAR},
				#{registerDate,jdbcType=VARCHAR})
	</insert>

    <update id="update" parameterType="com.dhxx.common.entity.user.User">
        update TB_USER
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null and userPassword != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="udn != null and udn != ''">
                udn = #{udn,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status=#{status},
            </if>
        </set>
        where account = #{account}
    </update>

    <delete id="delete" parameterType="com.dhxx.common.entity.user.User">
		delete from TB_USER where account = #{account}
	</delete>

    <select id="personalInfo" resultType="com.dhxx.common.entity.dto.UserDTO">
        select u.UDN udn,
               u.USER_NAME userName,
               g.GRP_NAME grpName,
               u.ROLE_ID roleId,
               m.ONLINE_STATUS onlineStatus,
               (select s.TYPE subType from TB_SUBSCRIBE s where s.UDN=#{udn} and s.CALLED_UDN=#{callUdn})  subType
        from TB_GROUP_MS gm
        inner join TB_MS_INFO m on m.UDN=gm.UDN
        inner join TB_GROUP_INFO g on g.GRP_ID=gm.GRP_ID
        inner join TB_USER u on u.UDN=gm.UDN
        where gm.UDN=#{callUdn}
        and g.GRP_ID=#{grpId}
    </select>

    <select id="findUserByPage" resultMap="userMap">
        select u.id,
            u.account account,
            u.user_name userName,
            u.udn udn,
            u.ROLE_ID roleId,
            u.status status,
            u.register_date registerDate
        from TB_USER u
        limit ${(pageNow-1)*pageSize}, #{pageSize}
    </select>

    <select id="findUserByCount" resultType="java.lang.Double">
        select count(1) from TB_USER u
    </select>
</mapper>